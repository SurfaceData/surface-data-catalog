datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model UserRoles {
  id       String @id
  role     String
  datasets Dataset[]
}

model Dataset {
  id               String @id
  name             String
  task             String
  license          String
  readme           String @default("")
  // Dataset Access permissions will expire `expirationInDays` after
  // being granted.  When this is set to 0 then permissions will never
  // automatically expire.
  expirationInDays Int @default(0)
  subsets          DatasetSubset[]
  steward          UserRoles[]
  access           DatasetAccess[]
}

model DatasetSubset {
  id        String @id
  language  String
  path      String
  dataset   Dataset @relation(fields: [datasetId], references: [id])
  datasetId String
  download  DownloadLog[]
}

model DatasetAccess {
  id         Int @id  @default(autoincrement())
  userId     String
  datasetId  String
  dataset    Dataset @relation(fields: [datasetId], references: [id])
  // 0 - Unknown
  // 1 - Requested
  // 2 - Rejected
  // 3 - Accepted
  // 4 - Expired
  status     Int @default(0)
  expiration DateTime?

  @@unique([userId, datasetId])
}

model UserApiKey {
  id   String @id
  key  String @unique

  @@index([key])
}

model DownloadLog {
  id         Int @id @default(autoincrement())
  userId     String
  datasetId  String
  dataset    DatasetSubset @relation(fields: [datasetId], references: [id])
  // 0 - Unknown
  // 1 - Accepted
  // 2 - Rejected
  statusCode Int
  createdAt  DateTime @default(now())
}
